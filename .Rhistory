right_join(compare, by = "Scientific")%>%
select(admo)[,])
as.vector(filter(test, !is.na(n_admo), n_admo>0))%>%
group_by(Scientific)%>%
summarise(admo = n())%>%
select(Scientific, admo)%>%
right_join(compare, by = "Scientific")%>%
select(admo)[,])
as.vector(filter(test, !is.na(n_admo), n_admo>0)%>%
group_by(Scientific)%>%
summarise(admo = n())%>%
select(Scientific, admo)%>%
right_join(compare, by = "Scientific")%>%
select(admo)[,])
as.vector(filter(test, !is.na(n_admo), n_admo>0)%>%
group_by(Scientific)%>%
summarise(admo = n())%>%
select(Scientific, admo)%>%
right_join(compare, by = "Scientific")%>%
select(admo))
as.data.table(filter(test, !is.na(n_admo), n_admo>0)%>%
group_by(Scientific)%>%
summarise(admo = n())%>%
select(Scientific, admo)%>%
right_join(compare, by = "Scientific")%>%
select(admo))
as.data.frame(filter(test, !is.na(n_admo), n_admo>0)%>%
group_by(Scientific)%>%
summarise(admo = n())%>%
select(Scientific, admo)%>%
right_join(compare, by = "Scientific")%>%
select(admo))
compare$admo <- as.data.frame(filter(test, !is.na(n_admo), n_admo>0)%>%
group_by(Scientific)%>%
summarise(admo = n())%>%
select(Scientific, admo)%>%
right_join(compare, by = "Scientific")%>%
select(admo))
unique(test$consult_type)
compare$fcons <- as.data.frame(filter(test, grepl("Formal", consult_type))%>%
group_by(Scientific)%>%
summarise(fcons = n())%>%
select(Scientific, fcons)%>%
right_join(compare, by = "Scientific")%>%
select(fcons))
compare$cons <- as.data.frame(#filter(test, grepl("Formal", consult_type))%>%
group_by(Scientific)%>%
summarise(cons = n())%>%
select(Scientific, cons)%>%
right_join(compare, by = "Scientific")%>%
select(cons))
compare$cons <- as.data.frame(#filter(test, grepl("Formal", consult_type))%>%
group_by(test, Scientific)%>%
summarise(cons = n())%>%
select(Scientific, cons)%>%
right_join(compare, by = "Scientific")%>%
select(cons))
test$Scientific[grepl("arroyo", test$spp_ev_ls)] <- "Anaxyrus californicus"
test$Scientific[grepl("subintegra", test$spp_ev_ls)] <- "Purshia subintegra"
test$Scientific[grepl("Turtle, bog", test$spp_ev_ls)] <- "Clemmys muhlenbergii"
test$Scientific[grepl("Lessingia", test$spp_ev_ls)] <- "Lessingia germanorum var. germanorum"
copmare$cons$cons <- NULL
compare$cons$cons <- NULL
compare$cons
compare$cons <- NULL
compare$admo <- NULL
compare$fcons <- NULL
compare$cons <- as.data.frame(#filter(test, grepl("Formal", consult_type))%>%
group_by(test, Scientific)%>%
summarise(cons = n())%>%
select(Scientific, cons)%>%
right_join(compare, by = "Scientific")%>%
select(cons))
compare$fcons <- as.data.frame(filter(test, grepl("Formal", consult_type))%>%
group_by(Scientific)%>%
summarise(fcons = n())%>%
select(Scientific, fcons)%>%
right_join(compare, by = "Scientific")%>%
select(fcons))
compare$admo <- as.data.frame(filter(test,!is.na(n_admo), n_admo>0)%>%
group_by(Scientific)%>%
summarise(admo = n())%>%
select(Scientific, admo)%>%
right_join(compare, by = "Scientific")%>%
select(admo))
compare$admo <- NULL
compare$fcons <- NULL
compare$cons <- NULL
View(office_cont)
filter(test, Scientific == "Salvelinus confluentus")%>%
group_by(Scientific)%>%
summaris(count = n())
filter(test, Scientific == "Salvelinus confluentus")%>%
group_by(Scientific)%>%
summarise(count = n())
filter(test, Scientific == "Salvelinus confluentus")%>%
group_by(Scientific)%>%
summarise(count = n())$count
summarise(count = n())[1,3]
filter(test, Scientific == "Salvelinus confluentus")%>%
group_by(Scientific)%>%
summarise(count = n())%>%
select(count)$count
filter(test, Scientific == "Salvelinus confluentus")%>%
group_by(Scientific)%>%
summarise(count = n())%>%
select(count)[1]
filter(test, Scientific == "Salvelinus confluentus")%>%
group_by(Scientific)%>%
summarise(count = n())%>%
select(count)
for(i in 1:nrow(compare)){
if(compare$Units[i]>0){
compare$cons <-filter(test, Scientific == compare$Scientific[i],
as.Date(start_date, format = "%Y-%m-%d")>= Scientific$ymd[i])%>%
group_by(Scientific)%>%
summarise(cons = n())
}else{
compare$cons <-filter(test, Scientific == compare$Scientific[i])%>%
group_by(Scientific)%>%
summarise(cons = n())
}
}
for(i in 1:nrow(compare)){
if(compare$Units[i]>0){
compare$cons <-filter(test, Scientific == compare$Scientific[i],
as.Date(start_date, format = "%Y-%m-%d")>= compare$ymd[i])%>%
group_by(Scientific)%>%
summarise(cons = n())
}else{
compare$cons <-filter(test, Scientific == compare$Scientific[i])%>%
group_by(Scientific)%>%
summarise(cons = n())
}
}
filter(test, Scientific == "Salvelinus confluentus")%>%
group_by(Scientific)%>%
summarise(count = n())%>%
select(count)[[1]]
filter(test, Scientific == "Salvelinus confluentus")%>%
group_by(Scientific)%>%
summarise(count = n())%>%
select(count)%>%
unlist
for(i in 1:nrow(compare)){
if(compare$Units[i]>0){
compare$cons <-filter(test, Scientific == compare$Scientific[i],
as.Date(start_date, format = "%Y-%m-%d")>= compare$ymd[i])%>%
group_by(Scientific)%>%
summarise(cons = n())%>%
select(count)%>%
unlist(use.names=FALSE)
}else{
compare$cons <-filter(test, Scientific == compare$Scientific[i])%>%
group_by(Scientific)%>%
summarise(cons = n())
select(count)%>%
unlist(use.names=FALSE)
}
}
for(i in 1:nrow(compare)){
if(compare$Units[i]>0){
compare$cons <-filter(test, Scientific == compare$Scientific[i],
as.Date(start_date, format = "%Y-%m-%d")>= compare$ymd[i])%>%
group_by(Scientific)%>%
summarise(cons = n())%>%
select(cons)%>%
unlist(use.names=FALSE)
}else{
compare$cons <-filter(test, Scientific == compare$Scientific[i])%>%
group_by(Scientific)%>%
summarise(cons = n())
select(cons)%>%
unlist(use.names=FALSE)
}
}
for(i in 1:nrow(compare)){
if(compare$Units[i]>0){
compare$cons[i] <-filter(test, Scientific == compare$Scientific[i],
as.Date(start_date, format = "%Y-%m-%d")>= compare$ymd[i])%>%
group_by(Scientific)%>%
summarise(cons = n())%>%
select(cons)%>%
unlist(use.names=FALSE)
}else{
compare$cons[i] <-filter(test, Scientific == compare$Scientific[i])%>%
group_by(Scientific)%>%
summarise(cons = n())
select(cons)%>%
unlist(use.names=FALSE)
}
}
compare$cons <- NA
for(i in 1:nrow(compare)){
if(compare$Units[i]>0){
compare$cons[i] <-filter(test, Scientific == compare$Scientific[i],
as.Date(start_date, format = "%Y-%m-%d")>= compare$ymd[i])%>%
group_by(Scientific)%>%
summarise(cons = n())%>%
select(cons)%>%
unlist(use.names=FALSE)
}else{
compare$cons[i] <-filter(test, Scientific == compare$Scientific[i])%>%
group_by(Scientific)%>%
summarise(cons = n())
select(cons)%>%
unlist(use.names=FALSE)
}
}
test(grepl("Purshia subintegra", test$Scientific)) <- "Purshia (=Cowania) subintegra"
test[grepl("Purshia subintegra", test$Scientific)] <- "Purshia (=Cowania) subintegra"
test[grepl("subintegra", test$spp_ev_ls)] <- "Purshia (=Cowania) subintegra"
test$Scientific[grepl("subintegra", test$spp_ev_ls)] <- "Purshia (=Cowania) subintegra"
test$Scientific[grepl("Masticophis", test$spp_ev_ls)] <- "Masticophis lateralis euryxanthus"
filter(test, Scientific == "bonerjams")%>%
group_by(Scientific)%>%
summarise(cons = n())
for(i in 1:nrow(compare)){
if(compare$Units[i]>0){
compare$cons[i] <-filter(test, Scientific == compare$Scientific[i],
as.Date(start_date, format = "%Y-%m-%d")>= compare$ymd[i])%>%
nrow()
#    group_by(Scientific)%>%
#    summarise(cons = n())%>%
#    select(cons)%>%
#    unlist(use.names=FALSE)
}else{
compare$cons[i] <-filter(test, Scientific == compare$Scientific[i])%>%
nrow()
#      group_by(Scientific)%>%
#      summarise(cons = n())
#      select(cons)%>%
#      unlist(use.names=FALSE)
}
}
for(i in 1:nrow(compare)){
if(compare$Units[i]>0){
compare$fcons[i] <-filter(test, Scientific == compare$Scientific[i],
as.Date(start_date, format = "%Y-%m-%d")>= compare$ymd[i],
grepl("Formal", consult_type))%>%
nrow()
#    group_by(Scientific)%>%
#    summarise(cons = n())%>%
#    select(cons)%>%
#    unlist(use.names=FALSE)
}else{
compare$fcons[i] <-filter(test, Scientific == compare$Scientific[i],
grepl("Formal", consult_type))%>%
nrow()
#      group_by(Scientific)%>%
#      summarise(cons = n())
#      select(cons)%>%
#      unlist(use.names=FALSE)
}
}
for(i in 1:nrow(compare)){
if(compare$Units[i]>0){
compare$admo[i] <-filter(test, Scientific == compare$Scientific[i],
as.Date(start_date, format = "%Y-%m-%d")>= compare$ymd[i],
!is.na(n_admo), n_admo>0)%>%
nrow()
#    group_by(Scientific)%>%
#    summarise(cons = n())%>%
#    select(cons)%>%
#    unlist(use.names=FALSE)
}else{
compare$admo[i] <-filter(test, Scientific == compare$Scientific[i],
!is.na(n_admo), n_admo>0)%>%
nrow()
#      group_by(Scientific)%>%
#      summarise(cons = n())
#      select(cons)%>%
#      unlist(use.names=FALSE)
}
}
nrow(rus)
nrow(plan_dates)
31/1309
filter(test, !is.na(n_admo), n_admo>0)%>%
grep(compare$Scientific, .)
nrow(filter(test, !is.na(n_admo), n_admo>0))
length(compare$Scientific[compare$Units>0]%in%filter(test, !is.na(n_admo), n_admo>0))
compare$Scientific[compare$Units>0]%in%filter(test, !is.na(n_admo), n_admo>0)
compare$Scientific[compare$Units>0]%in%filter(test, !is.na(n_admo), n_admo>0)$Scientific
length(filter(test, !is.na(n_admo), n_admo>0)%>%select(Scientific)%in%compare$Scientific[compare$Units>0])
length(filter(test, !is.na(n_admo), n_admo>0)$Scientific%in%compare$Scientific[compare$Units>0])
filter(test, !is.na(n_admo), n_admo>0, Scientific%in%compare$Scientific[compare$Units>0])
22/410
31/1309
filter(test, grepl("Formal", consult_type), Scientific%in%compare$Scientific[compare$Units>0])
length(filter(test, grepl("Formal", consult_type), Scientific%in%compare$Scientific[compare$Units>0]))
nrow(filter(test, grepl("Formal", consult_type), Scientific%in%compare$Scientific[compare$Units>0]))
nrow(filter(test, grepl("Formal", consult_type))
)
4769/23294
library(plotly)
plot_ly(group_cont, x = ~Group, y = ~All)%>%
add_series(type = "bar", x = ~Group, y = ~RUs)
plot_ly(group_cont, x = ~Group, y = ~All)%>%
add_trace(type = "bar", x = ~Group, y = ~RUs)
plot_ly(group_cont, x = ~Group, y = ~All)%>%
add_trace(type = "bar", x = ~Group, y = ~RUs, color = "blue")
plot_ly(group_cont, x = ~Group, y = ~All)%>%
add_trace(type = "bar", x = ~Group, y = ~RUs, color = "blue")%>%
add_trace(type = "bar", x = ~Group, y = ~All, color = "orange")
plot_ly(group_cont, x = ~Group)%>%
add_trace(type = "bar", x = ~Group, y = ~RUs.p, color = "blue")%>%
add_trace(type = "bar", x = ~Group, y = ~All.p, color = "orange")
plot_ly(group_cont, x = ~Group)%>%
add_trace(type = "bar", x = ~Group, y = ~RUs.p, name = "All")%>%
add_trace(type = "bar", x = ~Group, y = ~All.p, name = "R Units")
plot_ly(group_cont, x = ~Group)%>%
add_trace(type = "bar", x = ~Group, y = ~RUs.p, name = "R Units")%>%
add_trace(type = "bar", x = ~Group, y = ~All.p, name = "All")
plot_ly(filter(group_cont, Group != "Plants and Liches"), x = ~Group)%>%
add_trace(type = "bar", x = ~Group, y = ~RUs.p, name = "R Units")%>%
add_trace(type = "bar", x = ~Group, y = ~All.p, name = "All")
plot_ly(filter(group_cont, Group != "Plants and Lichens"), x = ~Group)%>%
add_trace(type = "bar", x = ~Group, y = ~RUs.p, name = "R Units")%>%
add_trace(type = "bar", x = ~Group, y = ~All.p, name = "All")
plot_ly(filter(group_cont, Group != "Plants and Lichens"), x = ~Group)%>%
add_trace(type = "bar", x = ~Group, y = ~RUs, name = "R Units")%>%
add_trace(type = "bar", x = ~Group, y = ~All, name = "All")
plot_ly(filter(group_cont, Group != "Plants and Lichens"), x = ~Group)%>%
add_trace(type = "bar", x = ~Group, y = ~RUs.p, name = "R Units")%>%
add_trace(type = "bar", x = ~Group, y = ~All.p, name = "All")
plot_ly()%>%
add_trace(species, x = ~Area, type = "histogram")%>%
add_trace(filter(compare, Units>0), x = ~Area, type = "histogram")
nrow(filter(test, !is.na(n_admo), n_admo>0), Scientific%in%compare$Scientific[compare$Units>0]))
nrow(filter(test, !is.na(n_admo), n_admo>0))
nrow(filter(test, !is.na(n_admo), n_admo>0), Scientific%in%compare$Scientific[compare$Units>0])
nrow(filter(test, !is.na(n_admo), n_admo>0))
nrow(filter(test, !is.na(n_admo), n_admo>0, Scientific%in%compare$Scientific[compare$Units>0]))
nrow(filter(test, !is.na(n_admo), n_admo>0))
22/410
nrow(rus)/nrow(plan_dates)
boxplot(data = compare[compare$Units>0,], fcons/cons)
boxplot(data = compare[compare$Units>0,], compare$fcons/compare$cons)
boxplot(group_by(Scientific)%>%mutate(p= filter(grepl("Formal", consult_type)/n())))
boxplot(group_by(test, Scientific)%>%mutate(p= filter(grepl("Formal", consult_type)/n())))
boxplot(group_by(test, Scientific)%>%mutate(total = n)%>%group_by(consult_type)%>%mutate(p = total/n()))
boxplot(group_by(test, Scientific)%>%mutate(total = n)%>%group_by(consult_type)%>%mutate(p = total/n())$total)
group_by(test, Scientific)%>%mutate(total = n)%>%group_by(consult_type)%>%mutate(p = total/n())
group_by(test, Scientific)%>%mutate(total = n())%>%group_by(consult_type)%>%mutate(p = n()/total)
group_by(test, Scientific)%>%mutate(total = n())%>%group_by(consult_type)%>%mutate(p = n()/total)$p
dim(full)
names(full)
head(full$spp_ev_ls)
head(full$n_admo)
sum(full$n_admo)
sum(full$n_admo, na.rm=TRUE)
head(full$spp_BO_ls)
nrow(filter(test, !is.na(n_admo), n_admo>0, Scientific%in%compare$Scientific[compare$Units>0]))
nrow(filter(test, !is.na(n_admo), n_admo>0))
filter(test, !is.na(n_admo), n_admo>0)
zz <- filter(test, !is.na(n_admo), n_admo>0)
dim(zz)
names(zz)
names(test)
dim(zz)
full$n_admo[full$n_admo > 0 & !is.na(full$n_admo)]
pp <- full[full$n_admo == 12 & !is.na(full$n_admo), ]
dim(pp)
pp$spp_ev_ls
head(full$spp_BO_ls)
nrow(filter(test, grepl("Formal", consult_type)))
save.image("C:/Users/mevans/repos/recovery_units/data.RData")
load("C:/Users/mevans/repos/recovery_units/data.RData")
chisq.test(group_cont[, 2:3])
str(chisq.test(group_cont[, 2:3]))
plot_ly()%>%
add_trace(species, x = ~Area, type = "histogram")%>%
add_trace(filter(compare, Units>0), x = ~Area, type = "histogram")
library(dplyr)
plot_ly()%>%
add_trace(species, x = ~Area, type = "histogram")%>%
add_trace(filter(compare, Units>0), x = ~Area, type = "histogram")
library(plotly)
plot_ly()%>%
add_trace(species, x = ~Area, type = "histogram")%>%
add_trace(filter(compare, Units>0), x = ~Area, type = "histogram")
compare$Area
species$Area
plot_ly()%>%
add_trace(species, x = ~Area, type = "histogram")
plot_ly()%>%
add_trace(data = species, x = ~Area, type = "histogram")
plot_ly()%>%
add_trace(data = species, x = ~Area, type = "histogram")%>%
add_trace(data = filter(compare, Units>0), x = ~Area, type = "histogram")
plot_ly()%>%
add_trace(data = species, x = ~Area, type = "histogram",histnorm = "probability")%>%
add_trace(data = filter(compare, Units>0), x = ~Area, type = "histogram", histnorm = "probability")%>%
layout(barmode = "overlay")
plot_ly()%>%
add_trace(data = species, x = ~Area, type = "histogram",histnorm = "probability", name = "All")%>%
add_trace(data = filter(compare, Units>0), x = ~Area, type = "histogram", histnorm = "probability", name = "RUs")%>%
layout(barmode = "overlay")
plot_ly()%>%
add_histogram(data = species, x = ~Area, histnorm = "probability", name = "All")%>%
add_histogram(data = filter(compare, Units>0), x = ~Area, histnorm = "probability", name = "RUs")%>%
layout(barmode = "overlay")
plot_ly()%>%
add_histogram(data = species, x = ~log(Area), histnorm = "probability", name = "All")%>%
add_histogram(data = filter(compare, Units>0), x = ~log(Area), histnorm = "probability", name = "RUs")%>%
layout(barmode = "overlay")
plot_ly()%>%
add_histogram(data = species, x = ~log(Area), histnorm = "probability", name = "All", xbins = seq(15,35,5))%>%
add_histogram(data = filter(compare, Units>0), x = ~log(Area), histnorm = "probability", name = "RUs", xbins = seq(15,35,5))%>%
layout(barmode = "overlay")
plot_ly()%>%
add_histogram(data = species, x = ~log(Area), histnorm = "probability", name = "All", xbins = list(start = 15, end = 35, size =5))%>%
add_histogram(data = filter(compare, Units>0), x = ~log(Area), histnorm = "probability", name = "RUs", xbins = list(start = 15, end = 35, size =5))%>%
layout(barmode = "overlay")
plot_ly()%>%
add_histogram(data = species, x = ~log(Area), histnorm = "probability", name = "All", xbins = list(start = 15, end = 35, size =1))%>%
add_histogram(data = filter(compare, Units>0), x = ~log(Area), histnorm = "probability", name = "RUs", xbins = list(start = 15, end = 35, size =1))%>%
layout(barmode = "overlay")
plot_ly()%>%
add_histogram(data = species, x = ~log(Area), histnorm = "probability", name = "All", xbins = list(start = 15, end = 35, size =0.5))%>%
add_histogram(data = filter(compare, Units>0), x = ~log(Area), histnorm = "probability", name = "RUs", xbins = list(start = 15, end = 35, size =0.5))%>%
layout(barmode = "overlay")
plot_ly(alpha = 0.75)%>%
add_histogram(data = species, x = ~log(Area), histnorm = "probability", name = "All", xbins = list(start = 15, end = 35, size =0.5))%>%
add_histogram(data = filter(compare, Units>0), x = ~log(Area), histnorm = "probability", name = "RUs", xbins = list(start = 15, end = 35, size =0.5))%>%
layout(barmode = "overlay")
wilcox.test(x = species$Area, y = filter(compare, Units>0)$Area, alternative = "l", paired = FALSE)
str(wilcox.test(x = species$Area, y = filter(compare, Units>0)$Area, alternative = "l", paired = FALSE))
chisq.test(x = c(
nrow(filter(test, grepl("Formal", consult_type), Scientific%in%compare$Scientific[compare$Units>0])),
nrow(filter(compare, Units >0))),
y = c(
nrow(filter(test, grepl("Formal", consult_type))),
nrow(plan_dates))
)
n_formal_ru <- nrow(filter(test, grepl("Formal", consult_type), Scientific%in%compare$Scientific[compare$Units>0]))
n_ru <- nrow(filter(compare, Units >0))
n_formal <- nrow(filter(test, grepl("Formal", consult_type)))
n_all <- nrow(plan_dates)
chisq.test(x = c(n_ru, n_formal_ru), y = c(n_all, n_formal))
n_formal_ru
n_formal
4769/23294
n_ru
n_all
31/1309
chisq.test(x = c(n_ru, n_all), y = c(n_formal_ru, n_formal))
chisq.test(x = c(31, 4769), y = c(1309, 23294))
chisq.test(x = c(31, 1309), y = c(4769, 23294))
load("C:/Users/mevans/repos/recovery_units/data.RData")
View(plan_dates)
compare[compare$Units>0,compare$fcons]/compare[compare$Units>0,compare$cons]
compare$fcons[compare$Units>0]/compare$cons[compare$Units>0]
table(test$Scientific, test$consult_type)
head(table(test$Scientific, test$consult_type))
head(table(test$Scientific, test$consult_type)[,1])
head(table(test$Scientific, test$consult_type)[,1])/table(test$Scientific)
nrow(table(test$Scientific, test$consult_type)[,1])
nrow(table(test$Scientific, test$consult_type))
nrow(table(test$Scientific))
table(test$Scientific, test$consult_type)/table(test$Scientific)
table(test$Scientific, test$consult_type)[,1]/table(test$Scientific)
boxplot(compare$fcons[compare$Units>0]/compare$cons[compare$Units>0],
table(test$Scientific, test$consult_type)[,1]/table(test$Scientific))
plot_ly(compare$fcons[compare$Units>0]/compare$cons[compare$Units>0], type = "box", name = "RUs")%>%
add_trace(y = table(test$Scientific, test$consult_type)[,1]/table(test$Scientific), name = "All")
library(dplyr)
library(plotly)
plot_ly(compare$fcons[compare$Units>0]/compare$cons[compare$Units>0], type = "box", name = "RUs")%>%
add_trace(y = table(test$Scientific, test$consult_type)[,1]/table(test$Scientific), name = "All")
plot_ly(compare$fcons[compare$Units>0]/compare$cons[compare$Units>0], type = "box", name = "RUs")
plot_ly(type = "box")%>%
add_trace(y = table(test$Scientific, test$consult_type)[,1]/table(test$Scientific), name = "All")
plot_ly(type = "box")%>%
add_trace(y = table(test$Scientific, test$consult_type)[,1]/table(test$Scientific), name = "All")%>%
add_trace(y = compare$fcons[compare$Units>0]/compare$cons[compare$Units>0], type = "box", name = "RUs")
plot_ly()%>%
add_trace(y = table(test$Scientific, test$consult_type)[,1]/table(test$Scientific), name = "All")%>%
add_trace(y = compare$fcons[compare$Units>0]/compare$cons[compare$Units>0], type = "box", name = "RUs")%>%
layout(title = "Formal Consultation Rates",
xaxis = list(title = "Percent of Consultations"))
plot_ly()%>%
add_trace(y = table(test$Scientific, test$consult_type)[,1]/table(test$Scientific), type = "box", name = "All")%>%
add_trace(y = compare$fcons[compare$Units>0]/compare$cons[compare$Units>0], type = "box", name = "RUs")%>%
layout(title = "Formal Consultation Rates",
yaxis = list(title = "Percent of Consultations"))
library(ggplot2)
ggplot( data = filter(group_cont, Group != "Plants and Lichens"), aes( x = Group))+
geom_bar(y = All.p)+
geom_bar(y = RUs.p)
load("C:/Users/mevans/repos/recovery_units/data.RData")
ggplot( data = filter(group_cont, Group != "Plants and Lichens"), aes( x = Group))+
geom_bar(y = All.p)+
geom_bar(y = RUs.p)
library(dplyr)
ggplot( data = filter(group_cont, Group != "Plants and Lichens"), aes( x = Group))+
geom_bar(y = All.p)+
geom_bar(y = RUs.p)
ggplot( data = filter(group_cont, Group != "Plants and Lichens"), aes( x = Group, y = All.p))+
geom_bar(stat= "identity")
ggplot( data = filter(group_cont, Group != "Plants and Lichens"), aes( x = Group, y = All.p))+
geom_bar(stat= "identity")+
geom_bar(stat= "identity", y = RUs.p)
library(tidyr)
gather(group_cont, "Set", "percent", 4:5)
temp <- gather(group_cont, "Set", "percent", 4:5)
ggplot( data = filter(temp, Group != "Plants and Lichens"), aes( x = Group, y = percent, fill = Set))+
geom_bar(stat= "identity", position = position_dodge(), color = "black")+
scale_fill_manual(values = c("blue", "orange"))
ggplot(data = species, aes( x = log(Area)))+
geom_histogram(binwidth = 0.5, color = "black", fill = "blue", alpha = .7)
