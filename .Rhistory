ggplot(data = rbind(species[ ,c(1,3,4)], compare[compare$group == "R", c(1,12,17)]), aes(x = log(Area), y = ..density.., fill = group))+
geom_histogram(binwidth = 0.5, position = "dodge")+
#  geom_histogram(data = filter(compare, Units>0), aes(x = log(Area), y = ..density.., fill = "orange"), #binwidth = 0.5, position = "jitter")+
scale_fill_manual(name = NULL, values =c("blue", "orange"), labels = c("All Species", "Species with\nRecovery Units"))+
labs( x = "Area (log acres)", y = "Percentage of Listed Species", title = "Range Sizes by Recovery Unit Status")+
theme_minimal()+theme(legend.position = c(.85, .9), panel.grid.major.x=element_blank())
save.image("C:/Users/mevans/repos/recovery_units/data.RData")
plot_ly(filter(group_cont, Group != "Plants and Lichens"), x = ~Group)%>%
add_trace(type = "bar", x = ~Group, y = ~All.p, name = "All")%>%
add_trace(type = "bar", x = ~Group, y = ~RUs.p, name = "R Units")%>%
layout(title = "Distribution of Taxanomic Groups",
yaxis = list(title = "Proportion of Species"))
ggplot( data = filter(temp, Group != "Plants and Lichens"), aes( x = Group, y = percent, fill = Set, color = NULL))+
geom_bar(stat= "identity", position = position_dodge())+
scale_fill_manual(name = NULL, values = c("blue", "orange"), labels = c("All Species", "Species with\nRecovery Units"))+
labs( x = NULL, y = "Percentage of Species", title = "Representation of Taxonomic Groups")+
theme_minimal()+theme(legend.position = c(.8, .9), axis.text.x = element_text(angle = 45), panel.grid.major.x=element_blank())+xlim(c(0, 0.3))
ggplot( data = filter(temp, Group != "Plants and Lichens"), aes( x = Group, y = percent, fill = Set, color = NULL))+
geom_bar(stat= "identity", position = position_dodge())+
scale_fill_manual(name = NULL, values = c("blue", "orange"), labels = c("All Species", "Species with\nRecovery Units"))+
labs( x = NULL, y = "Percentage of Species", title = "Representation of Taxonomic Groups")+
theme_minimal()+theme(legend.position = c(.8, .9), axis.text.x = element_text(angle = 45), panel.grid.major.x=element_blank())+ylim(c(0, 0.3))
ggplot(data = goddamn, aes(x = log(Area), y = ..density.., fill = group))+
geom_histogram(binwidth = 0.5, position = "dodge")+
#  geom_histogram(data = filter(compare, Units>0), aes(x = log(Area), y = ..density.., fill = "orange"), #binwidth = 0.5, position = "jitter")+
scale_fill_manual(name = NULL, values =c("blue", "orange"), labels = c("All Species", "Species with\nRecovery Units"))+
labs( x = "Area (log acres)", y = "Relative Frequency", title = "Species' Range Sizes")+
theme_minimal()+theme(legend.position = c(.85, .9), panel.grid.major.x=element_blank())+ylim(c(0,0.5))
goddamn <- rbind(species[ ,c(1,3,4)], compare[compare$group == "R", c(1,12,17)])
ggplot(data = goddamn, aes(x = log(Area), y = ..density.., fill = group))+
geom_histogram(binwidth = 0.5, position = "dodge")+
#  geom_histogram(data = filter(compare, Units>0), aes(x = log(Area), y = ..density.., fill = "orange"), #binwidth = 0.5, position = "jitter")+
scale_fill_manual(name = NULL, values =c("blue", "orange"), labels = c("All Species", "Species with\nRecovery Units"))+
labs( x = "Area (log acres)", y = "Relative Frequency", title = "Species' Range Sizes")+
theme_minimal()+theme(legend.position = c(.85, .9), panel.grid.major.x=element_blank())+ylim(c(0,0.5))
ggplot( data = filter(temp, Group != "Plants and Lichens"), aes( x = Group, y = percent, fill = Set, color = NULL))+
geom_bar(stat= "identity", position = position_dodge())+
scale_fill_manual(name = NULL, values = c("blue", "orange"), labels = c("All Species", "Species with\nRecovery Units"))+
labs( x = NULL, y = "Percentage of Species", title = "Representation of Taxonomic Groups")+
theme_minimal()+theme(legend.position = c(.8, .9), axis.text.x = element_text(angle = 45), panel.grid.major.x=element_blank())+ylim(c(0, 0.3))
ggplot(data = goddamn, aes(x = log(Area), y = ..density.., fill = group))+
geom_histogram(binwidth = 0.5, position = "dodge")+
#  geom_histogram(data = filter(compare, Units>0), aes(x = log(Area), y = ..density.., fill = "orange"), #binwidth = 0.5, position = "jitter")+
scale_fill_manual(name = NULL, values =c("blue", "orange"), labels = c("All Species", "Species with\nRecovery Units"))+
labs( x = "Area (log acres)", y = "Relative Frequency", title = "Species' Range Sizes")+
theme_minimal()+theme(legend.position = c(.85, .9), panel.grid.major.x=element_blank(), legend.background = element_rect())+ylim(c(0,0.5))
ggplot(data = goddamn, aes(x = log(Area), y = ..density.., fill = group))+
geom_histogram(binwidth = 0.5, position = "dodge")+
#  geom_histogram(data = filter(compare, Units>0), aes(x = log(Area), y = ..density.., fill = "orange"), #binwidth = 0.5, position = "jitter")+
scale_fill_manual(name = NULL, values =c("blue", "orange"), labels = c("All Species", "Species with\nRecovery Units"))+
labs( x = "Area (log acres)", y = "Relative Frequency", title = "Species' Range Sizes")+
theme_minimal()+theme(legend.position = c(.85, .9), panel.grid.major.x=element_blank(), legend.background = element_rect(linetype = "none"))+ylim(c(0,0.5))
ggplot(data = goddamn, aes(x = log(Area), y = ..density.., fill = group))+
geom_histogram(binwidth = 0.5, position = "dodge")+
#  geom_histogram(data = filter(compare, Units>0), aes(x = log(Area), y = ..density.., fill = "orange"), #binwidth = 0.5, position = "jitter")+
scale_fill_manual(name = NULL, values =c("blue", "orange"), labels = c("All Species", "Species with\nRecovery Units"))+
labs( x = "Area (log acres)", y = "Relative Frequency", title = "Species' Range Sizes")+
theme_minimal()+theme(legend.position = c(.85, .9), panel.grid.major.x=element_blank(), legend.background = element_rect(linetype = NULL))+ylim(c(0,0.5))
ggplot(data = goddamn, aes(x = log(Area), y = ..density.., fill = group))+
geom_histogram(binwidth = 0.5, position = "dodge")+
#  geom_histogram(data = filter(compare, Units>0), aes(x = log(Area), y = ..density.., fill = "orange"), #binwidth = 0.5, position = "jitter")+
scale_fill_manual(name = NULL, values =c("blue", "orange"), labels = c("All Species", "Species with\nRecovery Units"))+
labs( x = "Area (log acres)", y = "Relative Frequency", title = "Species' Range Sizes")+
theme_minimal()+theme(legend.position = c(.85, .9), panel.grid.major.x=element_blank(), legend.background = element_rect(color = NULL))+ylim(c(0,0.5))
ggplot(data = goddamn, aes(x = log(Area), y = ..density.., fill = group))+
geom_histogram(binwidth = 0.5, position = "dodge")+
#  geom_histogram(data = filter(compare, Units>0), aes(x = log(Area), y = ..density.., fill = "orange"), #binwidth = 0.5, position = "jitter")+
scale_fill_manual(name = NULL, values =c("blue", "orange"), labels = c("All Species", "Species with\nRecovery Units"))+
labs( x = "Area (log acres)", y = "Relative Frequency", title = "Species' Range Sizes")+
theme_minimal()+theme(legend.position = c(.85, .9), panel.grid.major.x=element_blank(), legend.background = element_rect(color = "white"))+ylim(c(0,0.5))
filter(test, grepl("Cynomys parvidens", Scientific), as.date(start_date, format= "%Y-%m-%d") >= as.date("04/26/2012", format = "%m/%d/%Y"))
filter(test, grepl("Cynomys parvidens", Scientific), as.Date(start_date, format= "%Y-%m-%d") >= as.Date("04/26/2012", format = "%m/%d/%Y"))
filter(test, grepl("Cynomys parvidens", Scientific), as.Date(start_date, format= "%Y-%m-%d") >= as.Date("04/26/2012", format = "%m/%d/%Y"), grepl("Formal", consult_type))
filter(test, grepl("Euphilotes battoides allyni", Scientific), as.Date(start_date, format= "%Y-%m-%d") >= as.Date("09/28/1998", format = "%m/%d/%Y"), grepl("Formal", consult_type))
filter(test, grepl("Oncorhynchus gilae", Scientific), as.Date(start_date, format= "%Y-%m-%d") >= as.Date("09/10/2003", format = "%m/%d/%Y"), grepl("Formal", consult_type))
filter(test, grepl("Chasmistes brevirostris", Scientific), as.Date(start_date, format= "%Y-%m-%d") >= as.Date("04/16/2013", format = "%m/%d/%Y"), grepl("Formal", consult_type))
filter(test, grepl("Deltistes luxatus", Scientific), as.Date(start_date, format= "%Y-%m-%d") >= as.Date("04/16/2013", format = "%m/%d/%Y"), grepl("Formal", consult_type))
filter(test, grepl("Lycaeides melissa samuelis", Scientific), as.Date(start_date, format= "%Y-%m-%d") >= as.Date("09/19/203", format = "%m/%d/%Y"), grepl("Formal", consult_type))
filter(test, grepl("Fritillaria gentneri", Scientific), as.Date(start_date, format= "%Y-%m-%d") >= as.Date("09/19/203", format = "%m/%d/%Y"), grepl("Formal", consult_type))
save.image("C:/Users/mevans/repos/recovery_units/data.RData")
library(pdftools)
files <- list.files("E:/2014", recursive = TRUE, pattern = ".pdf", full.names = FALSE)
for(i in files){
tryCatch(pdf_text(paste("E:/2014", i, sep = "/")), error = function(e) print(i))}
load("C:/Users/mevans/repos/recovery_units/data.RData")
View(rus)
save(rus, file = "rus.RData")
View(full)
View(full)
biops <- as.data.frame(species = character(), file = character())
biops <- as.data.frame(species = character(0), file = character(0))
biops <- data.frame(species = character(), file = character())
rm(biops)
pdf <- pdf_text("E:/2014/Region 6/Utah/14_F_0039_20140203_L_Final BO_Sand Island")
pdf <- pdf_text("E:/2014/Region 6/Utah/14_F_0039_20140203_L_Final BO_Sand Island.pdf")
pdf <- paste(pdf, collapse = " ")
str_extract(pdf[1], rus$Scientific)
library(stringr)
str_extract(pdf[1], rus$Scientific)
grep("", str_extract(pdf[1], rus$Scientific))
grepl("", str_extract(pdf[1], rus$Scientific))
grep("", str_extract(pdf[1], rus$Scientific), value = TRUE)
str_detect(pdf[1], rus$Scientific)
TRUE %in% str_detect(pdf[1], rus$Scientific)
grep("", str_extract(pdf[1], rus$Scientific), value = TRUE)
if(TRUE %in% str_detect(pdf[1], rus$Scientific)){
spp <- grep("", str_extract(pdf[1], rus$Scientific), value = TRUE)
biops$species[c(nrow(biops)+1, nrow(biops)+length(spp))] <- spp
biops$files <- i
}
biops <- data.frame(species = character(), file = character())
if(TRUE %in% str_detect(pdf[1], rus$Scientific)){
spp <- grep("", str_extract(pdf[1], rus$Scientific), value = TRUE)
biops$species[c(nrow(biops)+1, nrow(biops)+length(spp))] <- spp
biops$files <- i
}
TRUE %in% str_detect(pdf[1], rus$Scientific)
spp <- grep("", str_extract(pdf[1], rus$Scientific), value = TRUE)
spp
length(spp)
nrow(biops)
nrow(biops)+length(spp)
c(nrow(biops)+1:nrow(biops)+length(spp))
nrow(biops)+1:nrow(biops)+length(spp)
nrow(biops)
nrow(biops)+1
nrow(biops)+length(spp)
1:1
seq(1,1,1)
seq(nrow(biops)+1, nrow(biops)+length(spp),1)
biops$species[seq(nrow(biops)+1, nrow(biops)+length(spp),1)] <- spp
biops <- data.frame(species = character(), file = character())
biops <- data.frame(species = character(), file = character(), stringsAsFactors = FALSE)
biops$species[c(nrow(biops)+1, nrow(biops)+length(spp))] <- spp
spp
as.data.frame(spp,i)
as.data.frame(species = spp, file = i)
i <- "butthole"
as.data.frame(species = spp, file = i)
data.frame(species = spp, file = i)
spp <- c("Xyrauchen texansu", "Anal leakage")
data.frame(species = spp, file = i)
biops <- data.frame(species = character(), file = character(), stringsAsFactors = FALSE)
spp <- grep("", str_extract(pdf[1], rus$Scientific), value = TRUE)
datfr <- data.frame(species = spp, file = i, stringsAsFactors = FALSE)
biops <- rbind(biops, datfr)
load("rus.RData")
View(biops)
View(test)
library(dplyr)
filter(full, activity_code == "52410-2006-F-0781")
filter(full, activity_code == "52410-2006-F-0781")%>%select(activity_code, ESOffice, title, spp_BO_ls)
filter(full, grepl("FireRetardant", title))%>%select(activity_code, ESOffice, title, spp_BO_ls)
filter(full, grepl("Fire Retardant", title))%>%select(activity_code, ESOffice, title, spp_BO_ls)
filter(full, grepl("bog turtle action plan", title))%>%select(activity_code, ESOffice, title, spp_BO_ls)
filter(full, activity_code == "05E2CB00-2013-F-0520")%>%select(activity_code, ESOffice, title, spp_BO_ls)
save.image("C:/Users/mevans/repos/recovery_units/data.RData")
agrep("F-0001", biops$file)
load("C:/Users/mevans/repos/recovery_units/data.RData")
agrep("F-0001", biops$file)
biops[agrep("F-0001", biops$file), ]
agrep(biops$file[1], test$activity_code)
agrep(biops$file[2], test$activity_code)
agrep(biops$file[3], test$activity_code)
write.csv(biops, "biops.csv")
View(full)
rm(t, s, spp, i, thing, pp, datafr, add)
rm(datfr)
save.image("C:/Users/mevans/repos/recovery_units/data.RData")
load("C:/Users/mevans/repos/recovery_units/data.RData")
full[2061,"spp_ev_ls"]
full[2061,]
library(dplyr)
filter(full, activity_code == "22410-2009-F-0018")%>%select(spp_ev_ls)
filter(full, activity_code == "22410-2009-F-0018")%>%select(spp_BO_ls)
library(dplyr)
filter(test, actvity_code == "02#AAZ00-2013-F-0363")
load("C:/Users/mevans/repos/recovery_units/data.RData")
filter(test, actvity_code == "02#AAZ00-2013-F-0363")
filter(test, activity_code == "02#AAZ00-2013-F-0363")
filter(test, grepl("F-0363", activity_code))
filter(test, grepl("2013-F-0363", activity_code))
filter(test, grepl("Trout, gila", spp_ev_ls), consult_type == "Formal Consultation")
filter(test, grepl("Trout, gila", spp_ev_ls))
filter(test, grepl("Trout, Gila", spp_ev_ls), consult_type == "Formal Consultation")
filter(full, activity_code == "02ENNM00-2014-F-0275")
getwd()
library(rvest)
library(dplyr)
test <- html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_node(#Datatables_Table_3 a")
html_attr("href")
%>%
()
test <- html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_node("#Datatables_Table_3 a")%>%
html_attr("href")
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_node("#Datatables_Table_3 a")%>%
html_attr("href")
test
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_node("#Datatables_Table_3 a")
test
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_node("#DataTables_Table_3 a")%>%
html_attr("href")
test
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_node("#DataTables_Table_3 a")
test
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")
test
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_node("#DataTables_Table_3")
test
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_node("#DataTables_Table_3 .sorting_1+ td")
test
test <- html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")
test
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")
test
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_nodes("#DataTables_Table_3 .sorting_1+ td")
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_nodes("body")
test
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_nodes("body")%>%
html_nodes("#DataTables_Table_3 .sorting_1+ td")
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_nodes("h2")
test
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_nodes(".table-caption")
test
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_nodes("DataTables_Table_3 td")
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_nodes("#DataTables_Table_3 td")
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_nodes("/#DataTables_Table_3 td")
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_nodes("//#DataTables_Table_3 td")
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_nodes("#DataTables_Table_3 .sorting_1+ td")
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_nodes("#Data Tables_Table_3 .sorting_1+ td")
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_nodes("//*[(@id = "DataTables_Table_3")]//*+[contains(concat( " ", @class, " " ), concat( " ", "sorting_1", " " ))]//td")
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_nodes(".sorting_desc")
test
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_node(".sorting_desc")
test
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_node("th")
test
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_nodes("th")
test
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_nodes("#DataTables_Table_3")
test
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_node("#DataTables_Table_3")
test
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_nodes(".dataTables")
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_nodes(".dataTables_scrollBody")
test
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_nodes("#DataTables_Table_2_wrapper .col-sm-12")
test
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_node("#DataTables_Table_2_wrapper .col-sm-12")
test
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_node("#DataTables_Table_2_wrapper .col-sm-12")%>%
html_table()
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_node(xpath = "//*[(@id = "DataTables_Table_3")]//a")
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_node(xpath = '//*[(@id = "DataTables_Table_3")]//a')
test
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_node(xpath = '//*[(@id = "DataTables_Table_3")]//*+[contains(concat( " ", @class, " " ), concat( " ", "sorting_1", " " ))]//td')
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_node(xpath = '//*[(@id = "DataTables_Table_3")]//a')
test
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_nodes(xpath = '//*[(@id = "DataTables_Table_3")]//a')
test
library(ecosscraper)
get_tables("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_node('a')%>%
html_attr("href")
test
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_nodes('a')%>%
html_attr("href")
test
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_nodes('dataTables_wrapper')
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_nodes('dataTable')
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_nodes('table')
test
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_nodes('table tbody td')
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_nodes('table #DataTables_Table_3')
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_nodes('a')%>%
html_attr("href")%>%
grepl("five_year_review")
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_nodes('a')%>%
html_attr("href")%>%
grepl("five_year_review", .)
test
library(stringr)
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_nodes('a')%>%
html_attr("href")%>%
str_subset("five_year_review", .)
test <- read_html("http://ecos.fws.gov/ecp0/profile/speciesProfile?sId=5949")%>%
html_nodes('a')%>%
html_attr("href")%>%
str_subset("five_year_review")
test
load("C:/Users/mevans/repos/ecosscraper/data/TECP_domestic.rda")
View(TECP_domestic)
filter(TECP_domestic, Scientific_Name == "Myotis sodalis")$Species_Page
sp <- "Myotis sodalis"
spp_pg <- filter(TECP_domestic, Scientific_Name == sp)$Species_Page
link <- read_html(spp_pg)%>%
html_nodes('a')%>%
html_attr("href")%>%
str_subset("five_year_review")
spp_pg
link
paste(spp_pg,link,sep="")
paste("ecos.fws.gov", link, sep = "")
download.file(url = paste("ecos.fws.gov", link, sep = ""), destfile = paste("FiveYrRev/",sp,".pdf", sep = ""))
download.file(url = paste("ecos.fws.gov", link, sep = ""), destfile = paste("FiveYrRev/",sp,".pdf", sep = ""), mode = "wb")
download.file(url = paste("http://ecos.fws.gov", link, sep = ""), destfile = paste("FiveYrRev/",sp,".pdf", sep = ""), mode = "wb")
rm(TECP_domestic)
load("C:/Users/mevans/repos/recovery_units/data.RData")
load("C:/Users/mevans/repos/ecosscraper/data/TECP_domestic.rda")
for(name in compare$Scientific){
if(!(name%in%TECP_domestic$Scientific_Name)){paste(print(name%in%TECP_domestic$Scientific_Name), print(name), sep = " ")}}
View(TECP_domestic)
list<- compare$Scientific
list[c(55, 30, 40, 52)] <- c("Urocitellus brunneus", "Lessingia germanorum", "Euphydryas editha bayensis", NA)
list
for(sp in list){
spp_pg <- filter(TECP_domestic, grepl(sp, Scientific_Name))$Species_Page
link <- read_html(spp_pg)%>%
html_nodes('a')%>%
html_attr("href")%>%
str_subset("five_year_review")
download.file(url = paste("http://ecos.fws.gov", link, sep = ""), destfile = paste("FiveYrRev/",sp,".pdf", sep = ""), mode = "wb")
}
link
filter(TECP_domestic, grepl(list, Scientific_Name))$Species_Page
spp_pg <- filter(TECP_domestic, grepl(sp, Scientific_Name), Federal_Listing_Status == "Endangered"|"Threatened")$Species_Page
sp <- "Salvelinus confluentus"
spp_pg <- filter(TECP_domestic, grepl(sp, Scientific_Name), Federal_Listing_Status == "Endangered"|"Threatened")$Species_Page
spp_pg <- filter(TECP_domestic, grepl(sp, Scientific_Name), Federal_Listing_Status == "Threatened")$Species_Page
spp_pg
spp_pg <- filter(TECP_domestic, grepl(sp, Scientific_Name), Federal_Listing_Status == "Threatened"|Federal_Listing_Status == "Endangered")$Species_Page
spp_pg
for(sp in list){
spp_pg <- filter(TECP_domestic, grepl(sp, Scientific_Name), Federal_Listing_Status == "Endangered"|Federal_Listing_Status == "Threatened")$Species_Page
link <- read_html(spp_pg)%>%
html_nodes('a')%>%
html_attr("href")%>%
str_subset("five_year_review")
for(i in link){
download.file(url = paste("http://ecos.fws.gov", link, sep = ""), destfile = paste("FiveYrRev/",sp,i,".pdf", sep = ""), mode = "wb")
}
}
for(sp in list){
spp_pg <- filter(TECP_domestic, grepl(sp, Scientific_Name), Federal_Listing_Status == "Endangered"|Federal_Listing_Status == "Threatened")$Species_Page
link <- read_html(spp_pg)%>%
html_nodes('a')%>%
html_attr("href")%>%
str_subset("five_year_review")
for(i in 1:length(link)){
download.file(url = paste("http://ecos.fws.gov", link, sep = ""), destfile = paste("FiveYrRev/",sp,i,".pdf", sep = ""), mode = "wb")
}
}
link
for(sp in list){
spp_pg <- filter(TECP_domestic, grepl(sp, Scientific_Name), Federal_Listing_Status == "Endangered"|Federal_Listing_Status == "Threatened")$Species_Page
link <- read_html(spp_pg)%>%
html_nodes('a')%>%
html_attr("href")%>%
str_subset("five_year_review")
for(i in 1:length(link)){
download.file(url = paste("http://ecos.fws.gov", link[i], sep = ""), destfile = paste("FiveYrRev/",sp,i,".pdf", sep = ""), mode = "wb")
}
}
link
spp_pg <- filter(TECP_domestic, grepl("Anaxyrus californicus", Scientific_Name), Federal_Listing_Status == "Endangered"|Federal_Listing_Status == "Threatened")$Species_Page
spp_pg
for(sp in list){
print(sp)
spp_pg <- filter(TECP_domestic, grepl(sp, Scientific_Name), Federal_Listing_Status == "Endangered"|Federal_Listing_Status == "Threatened")$Species_Page
link <- read_html(spp_pg)%>%
html_nodes('a')%>%
html_attr("href")%>%
str_subset("five_year_review")
for(i in 1:length(link)){
download.file(url = paste("http://ecos.fws.gov", link[i], sep = ""), destfile = paste("FiveYrRev/",sp,i,".pdf", sep = ""), mode = "wb")
}
}
length(link)
spp_pg
list
for(sp in list){
print(sp)
spp_pg <- filter(TECP_domestic, grepl(sp, Scientific_Name), Federal_Listing_Status == "Endangered"|Federal_Listing_Status == "Threatened")$Species_Page
link <- read_html(spp_pg)%>%
html_nodes('a')%>%
html_attr("href")%>%
str_subset("five_year_review")
if(length(link)>0){
for(i in 1:length(link)){
download.file(url = paste("http://ecos.fws.gov", link[i], sep = ""), destfile = paste("FiveYrRev/",sp,i,".pdf", sep = ""), mode = "wb")
}}
}
filter(TECP_domestic, (grepl("Purshia (=Cowania) subintegra", Scientific_Name)))
list
list[23]<-"Purshia"
list[52] <- NULL
list
list <- list[c(23:51,53:55)]
list
for(sp in list){
print(sp)
spp_pg <- filter(TECP_domestic, grepl(sp, Scientific_Name), Federal_Listing_Status == "Endangered"|Federal_Listing_Status == "Threatened")$Species_Page
link <- read_html(spp_pg)%>%
html_nodes('a')%>%
html_attr("href")%>%
str_subset("five_year_review")
if(length(link)>0){
for(i in 1:length(link)){
download.file(url = paste("http://ecos.fws.gov", link[i], sep = ""), destfile = paste("FiveYrRev/",sp,i,".pdf", sep = ""), mode = "wb")
}}
}
list
for(sp in list[7:32]){
print(sp)
spp_pg <- filter(TECP_domestic, grepl(sp, Scientific_Name), Federal_Listing_Status == "Endangered"|Federal_Listing_Status == "Threatened")$Species_Page
link <- read_html(spp_pg)%>%
html_nodes('a')%>%
html_attr("href")%>%
str_subset("five_year_review")
if(length(link)>0){
for(i in 1:length(link)){
download.file(url = paste("http://ecos.fws.gov", link[i], sep = ""), destfile = paste("FiveYrRev/",sp,i,".pdf", sep = ""), mode = "wb")
}}
}
list
load("C:/Users/mevans/repos/ecosscraper/data/five_year_review_table.rda")
View(five_year_review_table)
list
list <- list[13:32]
list
for(sp in list){
print(sp)
spp_pg <- filter(TECP_domestic, grepl(sp, Scientific_Name), Federal_Listing_Status == "Endangered"|Federal_Listing_Status == "Threatened")$Species_Page
link <- read_html(spp_pg)%>%
html_nodes('a')%>%
html_attr("href")%>%
str_subset("five_year_review")
if(length(link)>0){
for(i in 1:length(link)){
download.file(url = paste("http://ecos.fws.gov", link[i], sep = ""), destfile = paste("FiveYrRev/",sp,i,".pdf", sep = ""), mode = "wb")
}}
}
length(list)
for(sp in list[2:20]){
print(sp)
spp_pg <- filter(TECP_domestic, grepl(sp, Scientific_Name), Federal_Listing_Status == "Endangered"|Federal_Listing_Status == "Threatened")$Species_Page
link <- read_html(spp_pg)%>%
html_nodes('a')%>%
html_attr("href")%>%
str_subset("five_year_review")
if(length(link)>0){
for(i in 1:length(link)){
download.file(url = paste("http://ecos.fws.gov", link[i], sep = ""), destfile = paste("FiveYrRev/",sp,i,".pdf", sep = ""), mode = "wb")
}}
}
for(name in compare$Scientific){
if(!(name%in%five_year_review_table$Species)){paste(print(name%in%five_year_review_table$Species), print(name), sep = " ")}}
list<- compare$Scientific
list[c(55, 30, 40, 52)] <- c("Urocitellus brunneus", "Lessingia germanorum", "Euphydryas editha bayensis", NULL)
list<- compare$Scientific
list[c(55, 30, 40, 52)] <- c("Urocitellus brunneus", "Lessingia germanorum", "Euphydryas editha bayensis", NA)
filter(five_year_review_table, Species%in%list)
str(five_year_review_table)
str_split(five_year_review_table$Doc_Link[1], "/")
str_split(five_year_review_table$Doc_Link[1], "/")[[1]][4]
save.image("C:/Users/mevans/repos/recovery_units/data.RData")
